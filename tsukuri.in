#!/bin/bash
#
# tsukuri - simple tool for building and installing packages in Ataraxia Linux
#

umask 022
unalias -a

export LC_ALL=POSIX
readonly VERSION="@VERSION@"
readonly DB="/var/lib/kagami"
readonly PKGS="$DB/pkgs"

msg() {
	local msg=$(echo $1 | tr -s / /)
	printf "\e[1m\e[32m==>\e[0m $msg\n"
}

die() {
	local msg=$(echo $1 | tr -s / /)
	printf "\e[1m\e[31m==!\e[0m $msg\n"
	unset TSUKURI_PKG TSUKURI_TMP apkg bpkg cpkg dpkg name version release backup depends conflicts
	rm -rf $TSUKURI_TMP
	exit 1
}

# from old apk-tools
list_subtract() {
	(
		cat "$1" "$2" | sort | uniq -u
		cat "$1"
	) | sort | uniq -d
}

# this stuff too
list_uninstall() {
	local f p
	local files=$(sort -r "$1" | sed 's:^:'"${TSUKURI_ROOT}"': ; s:/^[^\.]\./::g; s:/\{2,\}:/:g; s:/\./:/:g')
	if [ -z "$DRYRUN" ] ; then
		echo "$files" | tr '\n' '\0' | xargs -0 rm 2>/dev/null
		echo "$files" | tr '\n' '\0' | xargs -0 rmdir 2>/dev/null
		[ "$2" ] && echo "$files" >> "$2"
	fi
	return 0
}

check_conflicts() {
	if [ "$TSUKURI_CONFLICTS" = "1" ]; then
		local myconflicts
		for myconflicts in ${conflicts[@]}; do
			if [ -d "${TSUKURI_ROOT}"$PKGS/$myconflicts ]; then
				die "'"$dpkg"' is conflicting with '"$myconflicts"'"
			fi
		done
	fi
}

check_depends() {
	if [ "$TSUKURI_DEPENDS" = "1" ]; then
		local mydepends
		for mydepends in ${depends[@]}; do
			if [ ! -d "${TSUKURI_ROOT}"$PKGS/$mydepends ]; then
				die "'"$dpkg"' is depending on '"$mydepends"'"
			fi
		done
	fi
}

backup() {
	if [ "$TSUKURI_BACKUP" = "1" ]; then
		if [ -n "$backup" ]; then
			for abackup in ${backup[@]}; do
				if [ -f "${TSUKURI_ROOT}"$abackup ]; then
					mv "${TSUKURI_ROOT}"$abackup "$root"/$abackup.bak
				fi
			done
		fi
	fi
}

restore_files() {
	if [ "$TSUKURI_BACKUP" = "1" ]; then
		if [ -n "$backup" ]; then
			for abackup in ${backup[@]}; do
				if [ -f "${TSUKURI_ROOT}"$abackup ]; then
					mv "${TSUKURI_ROOT}"$abackup.bak "$root"/$abackup
				fi
			done
		fi
	fi
}

tsukuri_install() {
	unset TSUKURI_PKG TSUKURI_TMP apkg bpkg cpkg dpkg name version release backup depends conflicts

	TSUKURI_TMP="$(mktemp -d)" || die "Couldn't create a temporary directory"

	TSUKURI_BACKUP=1
	TSUKURI_SCRIPTS=1
	TSUKURI_TRIGGERS=1
	TSUKURI_REINSTALL=1
	TSUKURI_DEPENDS=1
	TSUKURI_CONFLICTS=1
	TSUKURI_SIGNATURE=1
	TSUKURI_UPDATE=0
	TSUKURI_ROOT='/'

	if [ -z "$1" ]; then
		die "Specify option"
	else
		while [ "$1" ]; do
			case $1 in
				-nb|--no-backup)
					TSUKURI_BACKUP=0
					;;
				-ns|--no-scripts)
					TSUKURI_SCRIPTS=0
					;;
				-nt|--no-triggers)
					TSUKURI_TRIGGERS=0
					;;
				-nr|--no-reinstall)
					TSUKURI_REINSTALL=0
					;;
				-nd|--no-depends)
					TSUKURI_DEPENDS=0
					;;
				-nc|--no-conflicts)
					TSUKURI_CONFLICTS=0
					;;
				-ni|--no-integrity)
					TSUKURI_SIGNATURE=0
					;;
				--root=*)
					TSUKURI_ROOT="${1#*=}"
					;;
				*.tsukuri)
					TSUKURI_PKG="$1"
					;;
				-h|--help)
					tsukuri_install_help
					;;
			esac
			shift
		done
	fi

	[ -f "$TSUKURI_PKG" ] || die "File not found or not specified"

	apkg="$(basename $TSUKURI_PKG)"
	bpkg="${apkg%*.tsukuri}"
	cpkg="${bpkg%-*}"
	dpkg="${cpkg%#*}"

	if [ -d "${TSUKURI_ROOT}"$PKGS/$dpkg ]; then
		if [ "$TSUKURI_REINSTALL" = "0" ]; then
			die "Package '"$dpkg"' is already installed"
		else
			TSUKURI_UPDATE=1
		fi
	else
		TSUKURI_UPDATE=0
	fi

	bsdtar -xf "$TSUKURI_PKG" MANIFEST -C "$TSUKURI_TMP" >/dev/null || die "Can't extract package archive. Check if archive is broken"

	if [ "$TSUKURI_SIGNATURE" = "1" ]; then
		bsdtar -xf "$TSUKURI_PKG" SIGNATURE -C "$TSUKURI_TMP" >/dev/null || die "Can't extract package signature"
	fi

	source "$TSUKURI_TMP"/MANIFEST

	if [ "$TSUKURI_UPDATE" = "1" ]; then
		OLDPKG="$(grep ^version ${TSUKURI_ROOT}$PKGS/$dpkg/MANIFEST | sed -e 's,version=,,g')-$(grep ^release ${TSUKURI_ROOT}$PKGS/$dpkg/MANIFEST | sed -e 's,release=,,g')"
		NEWPKG="$(grep ^version $TSUKURI_TMP/MANIFEST | sed -e 's,version=,,g')-$(grep ^release $TSUKURI_TMP/MANIFEST | sed -e 's,release=,,g')"
	fi

	if [ "$TSUKURI_UPDATE" = "1" ]; then
		vercmp $OLDPKG $NEWPKG
		if [ $? = 255 ]; then
			msg "Updating $dpkg"
		else
			msg "Reinstalling $dpkg"
		fi
	else
		msg "Installing $dpkg"
	fi

	check_conflicts
	check_depends

	if [ ! -d "${TSUKURI_ROOT}"$PKGS/$dpkg ]; then
		mkdir -p "${TSUKURI_ROOT}"$PKGS/$dpkg || die "couldn't write package in database"
	fi

	bsdtar -xf "$TSUKURI_PKG" -C "$TSUKURI_TMP"

	if [ "$TSUKURI_SIGNATURE" = "1" ]; then
		CURRENTSIG="$(sha224sum $TSUKURI_TMP/data | awk '{print $1}')"
		PKGSIG="$(cat $TSUKURI_TMP/SIGNATURE)"
		if [ "$CURRENTSIG" != "$PKGSIG" ]; then
			die "Failed to check integrity"
		fi
	fi

	if [ "$TSUKURI_UPDATE" = "1" ]; then
		if [ -f "${TSUKURI_ROOT}$PKGS/$dpkg/FILES" ]; then
			if [ -f "$TSUKURI_TMP/FILES" ]; then
				cp "${TSUKURI_ROOT}"$PKGS/$dpkg/FILES "$TSUKURI_TMP"/FILES.old
			fi
		fi
	fi

	if [ "$TSUKURI_SCRIPTS" = "1" ]; then
		if [ -f "$TSUKURI_TMP/INSTALL" ]; then
			source "$TSUKURI_TMP"/INSTALL
			if [ "$TSUKURI_UPDATE" = "1" ]; then
				if type pre-update > /dev/null 2>&1; then
					pre-update
				fi
			else
				if type pre-install > /dev/null 2>&1; then
					pre-install
				fi
			fi
		fi
	fi

	backup

	(
		cd "${TSUKURI_ROOT}"
		cpio -id < "$TSUKURI_TMP"/data || die "Couldn't unpack package files"
	)

	if [ "$TSUKURI_UPDATE" = "1" ]; then
		if [ -f "${TSUKURI_ROOT}$PKGS/$dpkg/FILES" ]; then
			if [ -f "$TSUKURI_TMP/FILES" ]; then
				list_subtract "$TSUKURI_TMP"/FILES.old "$TSUKURI_TMP"/FILES | list_uninstall -
			fi
		fi
	fi

	restore_files

	if [ "$TSUKURI_SCRIPTS" = "1" ]; then
		if [ -f "$TSUKURI_TMP/INSTALL" ]; then
			source "$TSUKURI_TMP"/INSTALL
			if [ "$TSUKURI_UPDATE" = "1" ]; then
				if type post-update > /dev/null 2>&1; then
					post-update
				fi
			else
				if type post-install > /dev/null 2>&1; then
					post-install
				fi
			fi
		fi
	fi

	cp "$TSUKURI_TMP"/MANIFEST "${TSUKURI_ROOT}"$PKGS/$dpkg/MANIFEST

	if [ -f "$TSUKURI_TMP/FILES" ]; then
		cp "$TSUKURI_TMP"/FILES "${TSUKURI_ROOT}"$PKGS/$dpkg/FILES
	fi
	if [ -f "$TSUKURI_TMP/INSTALL" ]; then
		cp "$TSUKURI_TMP"/INSTALL "${TSUKURI_ROOT}"$PKGS/$dpkg/INSTALL
	fi

	rm -rf $TSUKURI_TMP
}

main() {
	case $1 in
		-i|--install)
			tsukuri_install ${1+"$@"}
			;;
		-b|--build)
			tsukuri_build ${1+"$@"}
			;;
		-e|--emerge|*)
			tsukuri_emerge ${1+"$@"}
			;;
	esac
}

main "$@"

exit 0

